version: '3.8'
services:
    mongo_launcher:
        container_name: mongo_launcher
        image: mongo:7.0.4
        restart: on-failure
        networks:
            - app_network
        volumes:
            - ./docker/scripts/mongo-setup.sh:/scripts/mongo-setup.sh
        entrypoint: ['sh', '/scripts/mongo-setup.sh']
    mongo_replica_1:
        container_name: mongo_replica_1
        image: mongo:7.0.4
        ports:
            - 27017:27017
        restart: always
        entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'dbrs', '--dbpath', '/data/db', '--port', '27017']
        volumes:
            - ./.volumes/mongo/replica1:/data/db
            - ./.volumes/mongo/replica1/configdb:/data/configdb
        networks:
            - app_network
    mongo_replica_2:
        container_name: mongo_replica_2
        image: mongo:7.0.4
        ports:
            - 27018:27018
        restart: always
        entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'dbrs', '--dbpath', '/data/db', '--port', '27018']
        volumes:
            - ./.volumes/mongo/replica2:/data/db
            - ./.volumes/mongo/replica2/configdb:/data/configdb
        networks:
            - app_network
    mongo_replica_3:
        container_name: mongo_replica_3
        image: mongo:7.0.4
        ports:
            - 27019:27019
        restart: always
        entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'dbrs', '--dbpath', '/data/db', '--port', '27019']
        volumes:
            - ./.volumes/mongo/replica3:/data/db
            - ./.volumes/mongo/replica3/configdb:/data/configdb
        networks:
            - app_network

    minio:
        image: minio/minio
        container_name: minio
        ports:
            - '9000:9000'
            - '9001:9001'
        environment:
            MINIO_ROOT_USER: yazif
            MINIO_ROOT_PASSWORD: yazifantonio
        command: server /data --console-address ":9001"
        networks:
            - app_network
        volumes:
            - ./.volumes/minio/data:/data

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - '6379:6379'
        networks:
            - app_network
    types:
        container_name: types
        build:
            context: .
            dockerfile: ./docker/Dockerfile.types-dev
        restart: always
        networks:
            - app_network
        volumes:
            - type: bind
              source: ./packages/types/lib
              target: /app/packages/types/lib
            - type: bind
              source: ./packages/types/dist
              target: /app/packages/types/dist
    database:
        container_name: database
        build:
            context: .
            dockerfile: ./docker/Dockerfile.database-dev
        env_file:
            - ./packages/database/.env
        restart: always
        depends_on:
            - types
        networks:
            - app_network
        volumes:
            - type: bind
              source: ./packages/database/lib
              target: /app/packages/database/lib
            - type: bind
              source: ./packages/database/dist
              target: /app/packages/database/dist
    backend:
        container_name: backend
        build:
            context: .
            dockerfile: ./docker/Dockerfile.backend-dev
        env_file:
            - ./apps/backend/.env
        ports:
            - 8080:8080
        restart: always
        depends_on:
            - mongo_replica_1
            - mongo_replica_2
            - mongo_replica_3
            - types
            - database
        networks:
            - app_network
        volumes:
            - type: bind
              source: ./apps/backend/src
              target: /app/apps/backend/src
            - type: bind
              source: ./packages/types/dist
              target: /app/packages/types/dist
            - type: bind
              source: ./packages/database/dist
              target: /app/packages/database/dist

    # mobile:
    #     container_name: mobile
    #     build:
    #         context: .
    #         dockerfile: ./docker/Dockerfile.mobile-dev
    #     ports:
    #         - 19000:19000 # Expo port
    #         - 19001:19001 # WebSocket port
    #         - 19002:19002 # Debugging port
    #     network_mode: host # Add this line
    #     # environment:
    #     #     - REACT_NATIVE_PACKAGER_HOSTNAME=10.0.0.16
    #     stdin_open: true # Keep STDIN open to allow interactive CLI
    #     tty: true # Enable terminal mode
    #     # networks:
    #     #     - app_network
    #     volumes:
    #         - type: bind
    #           source: ./apps/mobile/src
    #           target: /app/apps/mobile/src
    #         - type: bind
    #           source: ./packages/types/dist
    #           target: /app/packages/types/dist
networks:
    app_network:
        driver: bridge
